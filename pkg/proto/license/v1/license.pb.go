// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: license/v1/license.proto

package licenseV1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetLicenseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *GetLicenseRequest) Reset() {
	*x = GetLicenseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_license_v1_license_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLicenseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLicenseRequest) ProtoMessage() {}

func (x *GetLicenseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_license_v1_license_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLicenseRequest.ProtoReflect.Descriptor instead.
func (*GetLicenseRequest) Descriptor() ([]byte, []int) {
	return file_license_v1_license_proto_rawDescGZIP(), []int{0}
}

func (x *GetLicenseRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type GetLicenseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	License string `protobuf:"bytes,1,opt,name=license,proto3" json:"license,omitempty"`
}

func (x *GetLicenseResponse) Reset() {
	*x = GetLicenseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_license_v1_license_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLicenseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLicenseResponse) ProtoMessage() {}

func (x *GetLicenseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_license_v1_license_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLicenseResponse.ProtoReflect.Descriptor instead.
func (*GetLicenseResponse) Descriptor() ([]byte, []int) {
	return file_license_v1_license_proto_rawDescGZIP(), []int{1}
}

func (x *GetLicenseResponse) GetLicense() string {
	if x != nil {
		return x.License
	}
	return ""
}

type ReadLicenseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ApiKey string `protobuf:"bytes,2,opt,name=apiKey,proto3" json:"apiKey,omitempty"`
}

func (x *ReadLicenseRequest) Reset() {
	*x = ReadLicenseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_license_v1_license_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadLicenseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadLicenseRequest) ProtoMessage() {}

func (x *ReadLicenseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_license_v1_license_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadLicenseRequest.ProtoReflect.Descriptor instead.
func (*ReadLicenseRequest) Descriptor() ([]byte, []int) {
	return file_license_v1_license_proto_rawDescGZIP(), []int{2}
}

func (x *ReadLicenseRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ReadLicenseRequest) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

type ReadLicenseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReadLicenseResponse) Reset() {
	*x = ReadLicenseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_license_v1_license_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadLicenseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadLicenseResponse) ProtoMessage() {}

func (x *ReadLicenseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_license_v1_license_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadLicenseResponse.ProtoReflect.Descriptor instead.
func (*ReadLicenseResponse) Descriptor() ([]byte, []int) {
	return file_license_v1_license_proto_rawDescGZIP(), []int{3}
}

var File_license_v1_license_proto protoreflect.FileDescriptor

var file_license_v1_license_proto_rawDesc = []byte{
	0x0a, 0x18, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x6c, 0x69, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x22, 0x27, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22,
	0x2e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x22,
	0x3c, 0x0a, 0x12, 0x52, 0x65, 0x61, 0x64, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x22, 0x15, 0x0a,
	0x13, 0x52, 0x65, 0x61, 0x64, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x4b, 0x5a, 0x49, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x30, 0x35, 0x73, 0x65, 0x63, 0x2f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x2d, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2d, 0x73, 0x64, 0x6b, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x6c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x56,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_license_v1_license_proto_rawDescOnce sync.Once
	file_license_v1_license_proto_rawDescData = file_license_v1_license_proto_rawDesc
)

func file_license_v1_license_proto_rawDescGZIP() []byte {
	file_license_v1_license_proto_rawDescOnce.Do(func() {
		file_license_v1_license_proto_rawDescData = protoimpl.X.CompressGZIP(file_license_v1_license_proto_rawDescData)
	})
	return file_license_v1_license_proto_rawDescData
}

var file_license_v1_license_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_license_v1_license_proto_goTypes = []any{
	(*GetLicenseRequest)(nil),   // 0: license.v1.GetLicenseRequest
	(*GetLicenseResponse)(nil),  // 1: license.v1.GetLicenseResponse
	(*ReadLicenseRequest)(nil),  // 2: license.v1.ReadLicenseRequest
	(*ReadLicenseResponse)(nil), // 3: license.v1.ReadLicenseResponse
}
var file_license_v1_license_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_license_v1_license_proto_init() }
func file_license_v1_license_proto_init() {
	if File_license_v1_license_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_license_v1_license_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GetLicenseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_license_v1_license_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GetLicenseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_license_v1_license_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ReadLicenseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_license_v1_license_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ReadLicenseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_license_v1_license_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_license_v1_license_proto_goTypes,
		DependencyIndexes: file_license_v1_license_proto_depIdxs,
		MessageInfos:      file_license_v1_license_proto_msgTypes,
	}.Build()
	File_license_v1_license_proto = out.File
	file_license_v1_license_proto_rawDesc = nil
	file_license_v1_license_proto_goTypes = nil
	file_license_v1_license_proto_depIdxs = nil
}
